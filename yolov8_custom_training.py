# -*- coding: utf-8 -*-
"""yolov8_custom_training.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18B0nnuNJNHWj8OWmcLVG1CJg2tV7NNRJ
"""

pip install ultralytics

import os
import shutil
import random
!pip install tqdm --upgrade
from tqdm.notebook import tqdm

from google.colab import drive
drive.mount('/content/drive')

train_path_img = "./yolo_data/images/train/"
train_path_label = "./yolo_data/labels/train/"
val_path_img = "./yolo_data/images/val/"
val_path_label = "./yolo_data/labels/val/"
test_path = "./yolo_data/test"

import os
import shutil
import random
from tqdm import tqdm

def train_test_split(path, neg_path=None, split=0.2):
    print("------ PROCESS STARTED -------")

    files = list(set([name[:-4] for name in os.listdir(path)]))  # removing duplicate names i.e. counting only number of images

    print(f"--- This folder has a total number of {len(files)} images---")
    random.seed(42)
    random.shuffle(files)

    test_size = int(len(files) * split)
    train_size = len(files) - test_size
    train_path_img = "train/images"
    train_path_label = "train/labels"
    val_path_img = "val/images"
    val_path_label = "val/labels"
    os.makedirs(train_path_img, exist_ok=True)
    os.makedirs(train_path_label, exist_ok=True)
    os.makedirs(val_path_img, exist_ok=True)
    os.makedirs(val_path_label, exist_ok=True)

    for filex in tqdm(files[:train_size]):
        if filex == 'classes':
            continue
        shutil.copy2(path + filex + '.jpg', f"{train_path_img}/" + filex + '.jpg')
        shutil.copy2(path + filex + '.txt', f"{train_path_label}/" + filex + '.txt')
    print(f"------ Training data created with 80% split {len(files[:train_size])} images -------")

    if neg_path:
        neg_images = list(set([name[:-4] for name in os.listdir(neg_path)]))  # removing duplicate names i.e. counting only number of images
        for filex in tqdm(neg_images):
            shutil.copy2(neg_path + filex + ".jpg", f"{train_path_img}/" + filex + '.jpg')
        print(f"------ Total  {len(neg_images)} negative images added to the training data -------")
        print(f"------ TOTAL Training data created with {len(files[:train_size]) + len(neg_images)} images -------")

    for filex in tqdm(files[train_size:]):
        if filex == 'classes':
            continue
        shutil.copy2(path + filex + '.jpg', f"{val_path_img}/" + filex + '.jpg')
        shutil.copy2(path + filex + '.txt', f"{val_path_label}/" + filex + '.txt')

train_test_split('/content/drive/MyDrive/yolov8/data/')  # without negative images

import ultralytics
ultralytics.checks()

!yolo task=detect mode=train model=yolov8s.pt data=/content/drive/MyDrive/yolov8/dataset.yaml epochs=10 imgsz=640 batch=8 project=/content/drive/MyDrive/yolov8/training_results name=football

!yolo task=detect mode=predict model=/content/drive/MyDrive/yolov8/training_results/football7/weights/best.pt conf=0.55 source=/content/drive/MyDrive/yolov8/test_images

!cp -r /content/runs/detect/predict /content/drive/MyDrive/yolov8/output